/* utility mixins and classes */

/* visually hides elements but keeps them accessible to screen readers */
@define-mixin is-visually-hidden {
  clip: rect(0 0 0 0);
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
}

.is-visually-hidden {
  @mixin is-visually-hidden;
}

/*
stretches element to full size of its parent
parent must have `position: relative`
*/
@define-mixin absolute-stretch {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.absolute-stretch {
  @mixin absolute-stretch;
}

/*
applies `inline-block` display mode to all child elements of any element
adds `margin-right` for spacing
this will be particularly useful for `ul` and `ol` elements
*/
@define-mixin has-inline-children {
  & > * {
    display: inline-block;
    &:not(:last-child) {
      margin-right: var(--inline-item-margin-right, 0.25rem);
    }
  }
}

.has-inline-children {
  @mixin has-inline-children;
}

/* makes element full width of its parent */
@define-mixin is-full-width {
  width: 100%;
}

.is-full-width {
  @mixin is-full-width;
}

/* makes element max width of 100% of its parent */
@define-mixin is-max-full-width {
  max-width: 100%;
}

.is-max-full-width {
  @mixin is-max-full-width;
}

/* centers element as a block element */
@define-mixin is-centered $max-width: auto {
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;
}

.is-centered {
  margin-right: auto;
  margin-left: auto;
}

/* floats element left */
@define-mixin is-pulled-left {
  float: left;
}

.is-pulled-left {
  @mixin is-pulled-left;
}

/* floats element right */
@define-mixin is-pulled-right {
  float: right;
}

.is-pulled-right {
  @mixin is-pulled-right;
}

/* clears to reset space after floated elements */
@define-mixin is-clearfix {
  &::before,
  &::after {
    display: table;
    content: '';
  }
  &::after {
    clear: both;
  }
}

.is-clearfix {
  @mixin is-clearfix;
}

@define-mixin flex-grid $flex-basis, $grid-gap {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$grid-gap;
  margin-left: -$grid-gap;
  & > * {
    flex: 1 1 $flex-basis;
    padding-right: $grid-gap;
    padding-left: $grid-gap;
  }
}
