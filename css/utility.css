/* utility mixins and classes */

/* makes element unselectable by user */
@define-mixin is-unselectable {
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
}

.is-unselectable {
  @mixin is-unselectable;
}

/* enables "flicking" scroll motion on touch devices when content overflows */
@define-mixin overflow-touch {
  -webkit-overflow-scrolling: touch;
}

.overflow-touch {
  @mixin overflow-touch;
}

/* visually hides elements but keeps them accessible to screen readers */
@define-mixin is-visually-hidden {
  clip: rect(0 0 0 0);
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
}

.is-visually-hidden {
  @mixin is-visually-hidden;
}

/* clears to reset space after floated elements */
@define-mixin clearfix {
  &::before,
  &::after {
    display: table;
    content: '';
  }
  &::after {
    clear: both;
  }
}

.clearfix {
  @mixin clearfix;
}

/* removes default appearance from buttons and inputs */
@define-mixin is-controlled {
  box-shadow: none;
  outline: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

/*
applies `inline-block` display mode to all child elements of any element
adds `margin-right` for spacing
this will be particularly useful for `ul` and `ol` elements
*/
@define-mixin is-inline {
  & > * {
    display: inline-block;
    &:not(:last-child) {
      margin-right: var(--inline-item-margin-right, 0.25rem);
    }
  }
}

.is-inline {
  @mixin is-inline;
}
