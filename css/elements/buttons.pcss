/* buttons */

@import '../utility/controls.pcss';

/* button mixin */
@define-mixin button {
  /* remove default browser appearance */
  @mixin is-controlled;
  /* prevent button text from being selected */
  @mixin is-unselectable;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: auto;
  height: var(--button-height, 2.25rem);
  overflow: visible;
  margin: 0;
  padding: var(--button-vertical-padding, 0) var(--button-horizontal-padding, 1rem);
  border: var(--button-border-width, 1px) solid var(--button-border-color, hsl(210, 100%, 50%));
  border-radius: var(--button-border-radius, 0.2rem);
  background-color: var(--button-background-color, hsl(210, 100%, 50%));
  font-family: inherit;
  font-size: inherit;
  font-weight: var(--button-font-weight, var(--font-weight-medium, 500));
  line-height: inherit;
  text-decoration: none;
  color: var(--button-text-color, white);
  transition: border-color var(--speed, 0.1s) var(--easing, ease-out), color var(--speed, 0.1s) var(--easing, ease-out), background-color var(--speed, 0.1s) var(--easing, ease-out);
  cursor: pointer;
  &:hover {
    border-color: var(--button-hover-border-color, hsl(210, 100%, 40%));
    background-color: var(--button-hover-background-color, hsl(210, 100%, 40%));
    color: var(--button-hover-text-color, white);
  }
  &:focus {
    border-color: var(--button-focus-border-color, hsl(210, 100%, 50%));
    background-color: var(--button-focus-background-color, hsl(210, 100%, 50%));
    box-shadow: 0 0 0 var(--outline-width, 0.2rem) var(--button-focus-box-shadow-color, var(--box-shadow-color, hsl(210, 100%, 85%)));
    color: var(--button-focus-text-color, white);
  }
  &:active {
    border-color: var(--button-active-border-color, hsl(210, 100%, 30%));
    background-color: var(--button-active-background-color, hsl(210, 100%, 30%));
    box-shadow: 0 0 0 var(--outline-width, 0.2rem) var(--button-active-box-shadow-color, var(--box-shadow-color, hsl(210, 100%, 85%)));
    color: var(--button-active-text-color, white);
  }
  /* force styling of text color if element has visited state (needed for `a` elements) */
  &:visited {
    color: var(--button-text-color, white);
  }
  &:disabled {
    border-color: var(--button-disabled-border-color, transparent);
    background-color: var(--button-disabled-background-color, var(--gray-lightest, hsl(220, 10%, 95%)));
    color: var(--button-disabled-text-color, var(--disabled-color, var(--gray-light, hsl(220, 10%, 60%))));
    cursor: not-allowed;
  }
}

/*
apply mixin to:
1. `button` elements
2. elements with `.button` class (can be an `a` element)
3. elements with certain `type` attributes
*/
@custom-selector :--button
  button,
  [role='button'],
  [type='button'],
  [type='submit'],
  [type='reset'];

:--button {
  @mixin button;
}

/* future-proof disabling of clicks on `<a>` elements */
fieldset[disabled] [role='button'] {
  pointer-events: none;
}
